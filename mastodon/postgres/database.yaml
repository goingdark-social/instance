apiVersion: "acid.zalan.do/v1"
kind: postgresql
metadata:
  name: mastodon-postgresql
  namespace: mastodon
spec:
  teamId: "mastodon"
  volume:
    size: 10Gi
  numberOfInstances: 2
  users:
    mastodon:
      - superuser
      - createdb
  databases:
    mastodon: mastodon
  enableLogicalBackup: false
  postgresql:
    version: "17"
    parameters:
      archive_timeout: "300"
  patroni:
    initdb:
      encoding: UTF8
      data-checksums: "true"
      locale: C
      lc-collate: C
      lc-ctype: C

  spiloFSGroup: 103
  tls:
    secretName: mastodon-postgresql-server
    caSecretName: mastodon-postgresql-ca
    caFile: ca.crt

  enableConnectionPooler: true
  enableReplicaConnectionPooler: true
  connectionPooler:
    numberOfInstances: 2
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 500m
        memory: 512Mi

  resources:
    requests:
      cpu: 200m
      memory: 512Mi
    limits:
      cpu: 1000m
      memory: 1Gi

  env:
    # from ExternalSecret mastodon-walg-s3
    - name: AWS_ACCESS_KEY_ID
      valueFrom:
        secretKeyRef:
          name: mastodon-walg-s3
          key: AWS_ACCESS_KEY_ID
    - name: AWS_SECRET_ACCESS_KEY
      valueFrom:
        secretKeyRef:
          name: mastodon-walg-s3
          key: AWS_SECRET_ACCESS_KEY
    - name: AWS_ENDPOINT
      valueFrom:
        secretKeyRef:
          name: mastodon-walg-s3
          key: AWS_ENDPOINT
    - name: WAL_S3_BUCKET
      valueFrom:
        secretKeyRef:
          name: mastodon-walg-s3
          key: WAL_S3_BUCKET
    # from ConfigMap mastodon-backup-env
    - name: USE_WALG_BACKUP
      valueFrom:
        configMapKeyRef:
          name: mastodon-backup-env
          key: USE_WALG_BACKUP
